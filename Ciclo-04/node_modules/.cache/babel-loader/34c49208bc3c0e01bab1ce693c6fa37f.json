{"ast":null,"code":"var _jsxFileName = \"/Users/diogogemaque/Documents/Node Js TI Academy/modulo4/src/pages/Servico/CadastrarServico/index.js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Alert, Button, Container, Form, FormGroup, Input, Label, Spinner } from \"reactstrap\";\nimport { api } from \"../../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CadastrarServico = () => {\n  //o VIEW(Pages), CONTROLLER E MODEL os 3 estão dentro da aplicação o Model da applicação vai conversar com algo externo que é o Banco de Dados (BD). Os dados do BD (referente as migrations) sobem no modelo do Model (cliente.js, servico.js e pedido.js da api). O Controller vai trabalhar com os serviços (Funcionalidades) e pegar os dados que estão no Views(pages) e trabalhar como objeto de dados (DTO - data transfer object). DTO é igual ao Mod  \n  //Vamos pegar os dados da Paga em DTO \n  // const [servico, setServico] = useState({\n  //     nome: '',\n  //     descricao: ''\n  // });\n  // const [status, setStatus] = useState({\n  //     formSave: false,\n  //     type: '',\n  //     message: ''\n  // })\n  // const valorInput = e => setServico({...servico, [e.target.name]: e.target.value})\n  //o evento \"e\" (que poderia ser qualquer letra) vai fazer com que a página não recarregue após clicar no cadastrar. o evento vai utilizar a função preventDefault(). A partir do uso dessa função a tela não vai carregar após o clique no botão\n  const cadServico = async e => {\n    console.log(\"CADASTRAR\");\n    e.preventDefault(); // setStatus({\n    //     formSave: true\n    // });\n    // const headers = {\n    //     'Content-Type': 'application/json'\n    // };\n    // //inserção \n    // await axios.post(api + \"/servicos\", servico, { headers })\n    //     .then((response) => {\n    //         //console.log(response.data.message);\n    //         if (response.data.error) {\n    //             setStatus({\n    //                 formSave: false,\n    //                 type: 'error',\n    //                 message: response.data.message\n    //             });\n    //         } else {\n    //             setStatus({\n    //                 formSave: false,\n    //                 type: 'success',\n    //                 message: response.data.message\n    //             });\n    //         }\n    //     })\n    //     //o catch vai tratar o erro -> o setStatus vai escrever qual erro ocorreu dentro do type e da message\n    //     .catch(() => {\n    //         setStatus({\n    //             formSave: false,\n    //             type: 'error',\n    //             message: 'Erro: não conect com a API'\n    //         })\n    //         // console.log(\"Erro: Não conectede na api\")\n    //     });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cadastrar Servi\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/visualizarservico\",\n            className: \"btn btn-outline-success btn-sm\",\n            children: \"Voltar para a lista de Servi\\xE7os\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"p-2\",\n        onSubmit: cadServico,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"nome\",\n            placeholder: \"Insira o nome do servi\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"descricao\",\n            placeholder: \"Insira a descri\\xE7\\xE3o do servi\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          outline: true,\n          color: \"success\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_c = CadastrarServico;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastrarServico\");","map":{"version":3,"sources":["/Users/diogogemaque/Documents/Node Js TI Academy/modulo4/src/pages/Servico/CadastrarServico/index.js"],"names":["axios","useState","Link","Alert","Button","Container","Form","FormGroup","Input","Label","Spinner","api","CadastrarServico","cadServico","e","console","log","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,IAAnC,EAAyCC,SAAzC,EAAoDC,KAApD,EAA2DC,KAA3D,EAAkEC,OAAlE,QAAiF,YAAjF;AACA,SAASC,GAAT,QAAoB,iBAApB;;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACtC;AACA;AACI;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA,QAAMC,UAAU,GAAG,MAAMC,CAAN,IAAW;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAF,IAAAA,CAAC,CAACG,cAAF,GAF0B,CAI1B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAxCD;;AA0CA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,oBAAT;AAA8B,YAAA,SAAS,EAAC,gCAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cAVJ,eAgBI,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,KAAhB;AAAsB,QAAA,QAAQ,EAAEJ,UAAhC;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,KAArB;AAAA,kCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,MAAxB;AAA+B,YAAA,WAAW,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,SAAD;AAAW,UAAA,SAAS,EAAC,KAArB;AAAA,kCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC,WAAxB;AAAoC,YAAA,WAAW,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAYI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,MAA7B;AAA8B,UAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA9FM;KAAMD,gB","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { Alert, Button, Container, Form, FormGroup, Input, Label, Spinner } from \"reactstrap\"\nimport { api } from \"../../../config\";\n\nexport const CadastrarServico = () => {\n//o VIEW(Pages), CONTROLLER E MODEL os 3 estão dentro da aplicação o Model da applicação vai conversar com algo externo que é o Banco de Dados (BD). Os dados do BD (referente as migrations) sobem no modelo do Model (cliente.js, servico.js e pedido.js da api). O Controller vai trabalhar com os serviços (Funcionalidades) e pegar os dados que estão no Views(pages) e trabalhar como objeto de dados (DTO - data transfer object). DTO é igual ao Mod  \n//Vamos pegar os dados da Paga em DTO \n    // const [servico, setServico] = useState({\n    //     nome: '',\n    //     descricao: ''\n    // });\n\n    // const [status, setStatus] = useState({\n    //     formSave: false,\n    //     type: '',\n    //     message: ''\n    // })\n\n    // const valorInput = e => setServico({...servico, [e.target.name]: e.target.value})\n\n    //o evento \"e\" (que poderia ser qualquer letra) vai fazer com que a página não recarregue após clicar no cadastrar. o evento vai utilizar a função preventDefault(). A partir do uso dessa função a tela não vai carregar após o clique no botão\n    const cadServico = async e => {\n        console.log(\"CADASTRAR\")\n        e.preventDefault();\n\n        // setStatus({\n        //     formSave: true\n        // });\n\n        // const headers = {\n        //     'Content-Type': 'application/json'\n        // };\n\n        // //inserção \n        // await axios.post(api + \"/servicos\", servico, { headers })\n        //     .then((response) => {\n        //         //console.log(response.data.message);\n        //         if (response.data.error) {\n        //             setStatus({\n        //                 formSave: false,\n        //                 type: 'error',\n        //                 message: response.data.message\n\n        //             });\n        //         } else {\n        //             setStatus({\n        //                 formSave: false,\n        //                 type: 'success',\n        //                 message: response.data.message\n        //             });\n        //         }\n        //     })\n        //     //o catch vai tratar o erro -> o setStatus vai escrever qual erro ocorreu dentro do type e da message\n        //     .catch(() => {\n        //         setStatus({\n        //             formSave: false,\n        //             type: 'error',\n        //             message: 'Erro: não conect com a API'\n        //         })\n        //         // console.log(\"Erro: Não conectede na api\")\n        //     });\n    };\n\n    return (\n        <div>\n            <Container>\n                <div className=\"d-flex\">\n                    <div className=\"m-auto p-2\">\n                        <h1>Cadastrar Serviço</h1>\n                    </div>\n                    <div className=\"p-2\">\n                        <Link to=\"/visualizarservico\" className=\"btn btn-outline-success btn-sm\">Voltar para a lista de Serviços</Link>\n                    </div>\n                </div>\n                {/* linha hr =m1 */}\n                <hr className=\"m-1\" />\n\n                {/* {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\n\n                {status.type === 'success' ? <Alert color=\"success\">{status.message}</Alert> : \"\"} */}\n\n                <Form className=\"p-2\" onSubmit={cadServico}>\n                    <FormGroup className=\"p-2\">\n                        <Label>Nome</Label>\n                        <Input type=\"text\" name=\"nome\" placeholder=\"Insira o nome do serviço\"  />\n                    </FormGroup>\n\n                    <FormGroup className=\"p-2\">\n                        <Label>Descrição</Label>\n                        <Input type=\"text\" name=\"descricao\" placeholder=\"Insira a descrição do serviço\"  />\n                    </FormGroup>\n\n                    {/* {status.formSave ? <Button type=\"submit\" outline color=\"success\" disabled>Cadastrando...<Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" /></Button> :  */}\n                    <Button type=\"submit\" outline color=\"success\">Cadastrar</Button>\n                </Form>\n            </Container>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}