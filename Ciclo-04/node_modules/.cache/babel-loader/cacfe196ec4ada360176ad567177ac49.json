{"ast":null,"code":"var _jsxFileName = \"/Users/diogogemaque/Documents/Node Js TI Academy/modulo4/src/pages/Servico/CadastrarServico/index.js\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Alert, Button, Container, Form, FormGroup, Input, Label, Spinner } from \"reactstrap\";\nimport { api } from \"../../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CadastrarServico = () => {\n  // const [servico, setServico] = useState({\n  //     nome: '',\n  //     descricao: ''\n  // });\n  // const [status, setStatus] = useState({\n  //     formSave: false,\n  //     type: '',\n  //     message: ''\n  // })\n  // const valorInput = e => setServico({...servico, [e.target.name]: e.target.value})\n  const cadServico = async => {\n    console.log(\"CADASTRAR\"); //e.preventDefault();\n    // setStatus({\n    //     formSave: true\n    // });\n    // const headers = {\n    //     'Content-Type': 'application/json'\n    // };\n    // //inserção \n    // await axios.post(api + \"/servicos\", servico, { headers })\n    //     .then((response) => {\n    //         //console.log(response.data.message);\n    //         if (response.data.error) {\n    //             setStatus({\n    //                 formSave: false,\n    //                 type: 'error',\n    //                 message: response.data.message\n    //             });\n    //         } else {\n    //             setStatus({\n    //                 formSave: false,\n    //                 type: 'success',\n    //                 message: response.data.message\n    //             });\n    //         }\n    //     })\n    //     //o catch vai tratar o erro -> o setStatus vai escrever qual erro ocorreu dentro do type e da message\n    //     .catch(() => {\n    //         setStatus({\n    //             formSave: false,\n    //             type: 'error',\n    //             message: 'Erro: não conect com a API'\n    //         })\n    //         // console.log(\"Erro: Não conectede na api\")\n    //     });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto p-2\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Cadastrar Servi\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/visualizarservico\",\n            className: \"btn btn-outline-success btn-sm\",\n            children: \"Voltar para a lista de Servi\\xE7os\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"m-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), status.type === 'error' ? /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"danger\",\n        children: status.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 44\n      }, this) : \"\", status.type === 'success' ? /*#__PURE__*/_jsxDEV(Alert, {\n        color: \"success\",\n        children: status.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 46\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Form, {\n        className: \"p-2\",\n        onSubmit: cadServico,\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"nome\",\n            placeholder: \"Insira o nome do servi\\xE7o\",\n            onChange: valorInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"p-2\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Descri\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"descricao\",\n            placeholder: \"Insira a descri\\xE7\\xE3o do servi\\xE7o\",\n            onChange: valorInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), status.formSave ? /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          outline: true,\n          color: \"success\",\n          disabled: true,\n          children: [\"Cadastrando...\", /*#__PURE__*/_jsxDEV(Spinner, {\n            style: {\n              width: '3rem',\n              height: '3rem'\n            },\n            type: \"grow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 109\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          outline: true,\n          color: \"success\",\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_c = CadastrarServico;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastrarServico\");","map":{"version":3,"sources":["/Users/diogogemaque/Documents/Node Js TI Academy/modulo4/src/pages/Servico/CadastrarServico/index.js"],"names":["axios","useState","Link","Alert","Button","Container","Form","FormGroup","Input","Label","Spinner","api","CadastrarServico","cadServico","async","console","log","status","type","message","valorInput","formSave","width","height"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { Alert, Button, Container, Form, FormGroup, Input, Label, Spinner } from \"reactstrap\"\nimport { api } from \"../../../config\";\n\nexport const CadastrarServico = () => {\n\n    // const [servico, setServico] = useState({\n    //     nome: '',\n    //     descricao: ''\n    // });\n\n    // const [status, setStatus] = useState({\n    //     formSave: false,\n    //     type: '',\n    //     message: ''\n    // })\n\n    // const valorInput = e => setServico({...servico, [e.target.name]: e.target.value})\n\n    const cadServico = async => {\n        console.log(\"CADASTRAR\")\n        //e.preventDefault();\n\n        // setStatus({\n        //     formSave: true\n        // });\n\n        // const headers = {\n        //     'Content-Type': 'application/json'\n        // };\n\n        // //inserção \n        // await axios.post(api + \"/servicos\", servico, { headers })\n        //     .then((response) => {\n        //         //console.log(response.data.message);\n        //         if (response.data.error) {\n        //             setStatus({\n        //                 formSave: false,\n        //                 type: 'error',\n        //                 message: response.data.message\n\n        //             });\n        //         } else {\n        //             setStatus({\n        //                 formSave: false,\n        //                 type: 'success',\n        //                 message: response.data.message\n        //             });\n        //         }\n        //     })\n        //     //o catch vai tratar o erro -> o setStatus vai escrever qual erro ocorreu dentro do type e da message\n        //     .catch(() => {\n        //         setStatus({\n        //             formSave: false,\n        //             type: 'error',\n        //             message: 'Erro: não conect com a API'\n        //         })\n        //         // console.log(\"Erro: Não conectede na api\")\n        //     });\n    };\n\n    return (\n        <div>\n            <Container>\n                <div className=\"d-flex\">\n                    <div className=\"m-auto p-2\">\n                        <h1>Cadastrar Serviço</h1>\n                    </div>\n                    <div className=\"p-2\">\n                        <Link to=\"/visualizarservico\" className=\"btn btn-outline-success btn-sm\">Voltar para a lista de Serviços</Link>\n                    </div>\n                </div>\n                {/* linha hr =m1 */}\n                <hr className=\"m-1\" />\n\n                {status.type === 'error' ? <Alert color=\"danger\">{status.message}</Alert> : \"\"}\n\n                {status.type === 'success' ? <Alert color=\"success\">{status.message}</Alert> : \"\"}\n\n                <Form className=\"p-2\" onSubmit={cadServico}>\n                    <FormGroup className=\"p-2\">\n                        <Label>Nome</Label>\n                        <Input type=\"text\" name=\"nome\" placeholder=\"Insira o nome do serviço\" onChange={valorInput} />\n                    </FormGroup>\n\n                    <FormGroup className=\"p-2\">\n                        <Label>Descrição</Label>\n                        <Input type=\"text\" name=\"descricao\" placeholder=\"Insira a descrição do serviço\" onChange={valorInput} />\n                    </FormGroup>\n\n                    {status.formSave ? <Button type=\"submit\" outline color=\"success\" disabled>Cadastrando...<Spinner style={{ width: '3rem', height: '3rem' }} type=\"grow\" /></Button> : \n                    <Button type=\"submit\" outline color=\"success\">Cadastrar</Button>}\n                </Form>\n            </Container>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}